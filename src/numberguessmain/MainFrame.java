package numberguessmain;

import java.awt.*;
import javax.swing.*;

/**
 * The frame that holds all GuessGame GUI elements, also provides
 * methods to control the individual elements such as the buttonPanel 
 * and the  text area.
 * @author Felipe Zuniga
 */
public class MainFrame extends JFrame
{   
    // --------------------- Instance variables --------------------- 
    
    // Holds the Frame's layout manager
    private BorderLayout layout;
    // Holds content pane
    private Container content;
    // Holds width of frame
    private final int frameWidth = 600 ;
    // Holds length of frame
    private final int frameLength = 300;
    // Holds control buttons
    private ButtonPanel buttonsPanel;
    // Holds TextArea that displays messages to user
    private TextArea textArea;
    
    // --------------------- Constructor -----------------------------    
    
    public MainFrame(String title)
    {
        // Call JFrame constructor
        super(title);
        
        // Set frame size
        setSize(frameWidth,frameLength);
        
        // Get content pane
        content = getContentPane();
        
        // Close program when cross is pressed on frame
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        // Instantiate layout manager
        layout = new BorderLayout();
                
        // Set layout manager of frame
        setLayout(layout);
          
        // --------------------- Buttons Panel -----------------------------    
        
        // Create buttons panel
        buttonsPanel = new ButtonPanel();
        // Add button panel to the western portion of the window
        content.add(buttonsPanel,BorderLayout.WEST);
               
        // --------------------- Text Area ------------------------------------    
        
        // Create new Text area
        textArea = new TextArea();
        // Create new scroll pane
        JScrollPane scrollPane = new JScrollPane(textArea);

        // Add to content pane
        content.add(scrollPane,BorderLayout.CENTER);
        
        // Display greetiing
        showWelcomeMessage();
    }
    
    // ---------------------- Accesor Methods ---------------------------
    
    public TextArea getTextArea()
    {
        return textArea;
    }
    
    public ButtonPanel getButtonsPanel()
    {
        return buttonsPanel;
    }
    
    // ---------------------- DIsplay Methods ------------------------------
    
    /**
     * Shows the first message the user sees before starting a new game,
     * if the user presses the yes button a new game will start otherwise
     * the GUI and the program will close.
     */
    public void showWelcomeMessage()
    {
        textArea.append("Welcome!\nWould you like to start a new game?\n");
    }
    
    /**
     * Asks user to think of a number from 1-100, this is the first message the user sees
     * when they start a new game.
     */
    public void promptUser()
    {
        textArea.append("Please think of a number from 1-100\nPress yes when you are ready.\n");
    }
    
    /**
     * Asks the user if the specified integer is number that they are thinking of.
     * @param guess The number generated by the computer
     */
    public void askUser(int guess)
    {
        textArea.append("\nIs " + guess + " the number that you're thinking of?\n");
    }
    
    /**
     * This message is only shown when the computer has guessed incorrectly, asks the
     * user if the guess was too high or too low.
     */
    public void showGameMessage()
    {
        textArea.append("Was my guess too high or too low?\n");
    }
    
    /**
     * This message is shown when the computer has correctly guessed the users number, also
     * displays the number of turns it took the computer to guess the number.
     * @param t 
     */
    public void showEndMessage(int t)
    {
        textArea.append("I win! It took me " + t + " turns to guess your number!\nPlay again?");
    }
    
    // ---------------------- Other Methods ------------------------------
    
    /**
     * Displays a message that thanks the user for playing and closes the GUI, this is used to end a GuessGame.
     */
    public void closeGUI()
    {  
        // Show exit message
        JOptionPane.showMessageDialog(rootPane, "Goodbye!", "Thanks for playing!",JOptionPane.INFORMATION_MESSAGE);
        super.dispose();
    }
    
     /**
      * Disables a button on button panel, see ButtonPanel javadoc for more information.
      * @param b The button to disable
      */
    public void disable(int b)
    {
        buttonsPanel.disableButton(b);
    }
    
     /**
      * Enables a button on button panel, see ButtonPanel javadoc for more information.
      * @param b The button to enable.
      */
    public void enable(int b)
    {
        buttonsPanel.enableButton(b);
    }
    
    /**
     * Erases all text from the textArea element.
     */
    public void clearText()
    {
        textArea.clear();
    }
}



   

